function startWalkthrough(){$(document).foundation("joyride","start",{pre_ride_callback:function(){$("#showHints").css("display","block"),$("#previous").css("display","block"),$("#next").css("display","block")},pre_step_callback:function(){console.log(this.$target.first().attr("id")),"preview"==this.$target.first().attr("id")?$("iframe").contents().find("canvas").addClass("joyride-highlight"):this.$target.first().addClass("joyride-highlight")},post_step_callback:function(){"preview"==this.$target.first().attr("id")?$("iframe").contents().find("canvas").removeClass("joyride-highlight"):this.$target.first().removeClass("joyride-highlight")},post_ride_callback:function(){console.log("JOYRIDE CLOSED"),$("#showHints").css("display","none"),$("#previous").css("display","none"),$("#next").css("display","none")},abort_on_close:!1})}function levelSelectMenu(){$("#levelSelectMenuModal").foundation("reveal","open")}function skipToLevel(e){return $("#levelSelectMenuModal").foundation("reveal","close"),"sandbox"==e?(storage.set("skipToSandbox",!0),void loadMiniCourse()):(currentLevel=e,void loadMiniCourse())}function revertMiniCourse(){loadMiniCourse(refreshPreview)}function publishPrompt(){$("#publishModal").foundation("reveal","open")}function undo(){editor_js.undo()}function publish(){console.log("PARENT PUBLISH"),generatedHTML=null,MinicoursePublisher.generateHTML({baseURL:"./mini/",baseLevel:maxLevel,js:editor_js.getValue(),formInfo:'<span id="first_name">'+$("#first_name").val().charAt(0).toUpperCase()+$("#first_name").val().slice(1)+'</span> from <span id="school">'+$("#00NU0000005PN7e").val()+'</span><span id="grade" style="display: none;">'+$("#grade").val()+'</span><span id="city" style="display: none;">'+$("#city").val()+'</span><span id="state" style="display: none;">'+$("#state").val()+'</span><span id="country" style="display: none;">'+$("#country").val()+"</span>"},function(e,n){return e?void alert("Error generating published HTML: "+e.message):(generatedHTML=n,generatedHTML?($("#published").hide(),$("#publishing").fadeIn(),void $.ajax({type:"POST",url:"https://publish.emcl.com/publish",data:{html:generatedHTML},crossDomain:!0,dataType:"json",error:function(e,n,o){alert("It looks like something went wrong. Please verify your internet connection and click Publish again."),console.log(arguments),ga("send","event","Ajax Error",n,"publisher",{nonInteraction:1})},success:function(e){var n=e["published-url"];language&&"es"==language&&(n+="?lang=es"),n=n.replace("globaloria.com","carnegielearning.com"),n=n.replace("myglife.org","carnegielearning.com"),$("#published").fadeIn().find("a").attr("href",n).text(n)},complete:function(){$("#publishing").hide()}})):void alert("There was an error publishing your game. Please try again later!"))})}function loadMiniCourse(cb){cb=cb||function(){};var zeroPaddedLevel=currentLevel<10?"0"+currentLevel:currentLevel;"true"==storage.get("skipToSandbox")?(zeroPaddedLevel=maxLevel,$("#levelMenu").css("display","none")):$("#levelMenu").css("display","block");var codeUrl="mini/"+languagePath+"levels/"+zeroPaddedLevel+".js";remixUrl&&"true"==storage.get("skipToSandbox")&&(codeUrl=window.location.href.match(/makequest.carnegielearning.com/)?"https://mymakequest.carnegielearning.com/"+remixUrl[1]:"https://hackpub-publisher-dev.s3.amazonaws.com/"+remixUrl[1]),$.get(codeUrl,function(data){if(remixUrl){debug2=data;var remixCode=data.match(/<script id="published-level-code">([\s\S])+?<\/script>/g);remixCode&&(data=remixCode[0].replace('<script id="published-level-code">',"").replace("</script>",""))}var markHints=[],readOnlyTokens=[],readOnlyRanges=[],foldedRanges=[],currLineNumber=0,currIndentation=0,editorTooltips=[],editorCommands={markHint:function(){markHints.push(arguments)},readOnlyToken:function(){readOnlyTokens.push(arguments)},beginReadOnly:function(){readOnlyRanges.push([currLineNumber])},endReadOnly:function(){var e=readOnlyRanges[readOnlyRanges.length-1];e.push(currLineNumber)},beginCodeFold:function(e){foldedRanges.push({begin:currLineNumber,indentation:currIndentation,linkText:e||"Moreâ€¦"})},endCodeFold:function(){var e=foldedRanges[foldedRanges.length-1];e.end=currLineNumber},insertTooltip:function(){editorTooltips.push(arguments)}};data=data.replace(/\r\n/g,"\n"),data=data.replace(/}\n*$/,"\n\n\n\n\n\n\n\n\n\n}\n"),data=data.split("\n").filter(function(line){var match=line.match(/(\s*)\/\/\s*EDITOR:(.*)/);if(!match)return currLineNumber++,!0;with(currIndentation=match[1],editorCommands)console.log("Executing editor command: "+match[2]),eval(match[2]);return!1}).join("\n"),originalEditorContent=data,editor_js.setValue(data),editor_js.markClean(),$("#undo").prop("disabled",!0),readOnlyRanges.push([0,1]),readOnlyRanges.push([editor_js.lineCount()-2,editor_js.lineCount()]),readOnlyRanges.forEach(function(e){editor_js.markText({line:e[0],ch:0},{line:e[1],ch:0},{className:"js-read-only",readOnly:!0})}),readOnlyTokens.forEach(function(arguments){readOnlyToken.apply(this,arguments)}),markHints.forEach(function(arguments){markHint.apply(this,arguments)}),$("#js_editor").removeClass("show-js-hints"),markHints.length?$("#showHints").show():$("#showHints").hide(),foldedRanges.forEach(function(e){var n={line:e.begin,ch:0},o=$('<span class="cm-comment">'+e.indentation+"// </span>");$('<span class="js-code-fold-link"></span>').text(e.linkText).appendTo(o),editor_js.foldCode(n,{widget:o[0],rangeFinder:function(o,t){return{from:n,to:{line:e.end-1,ch:editor_js.getLine(e.end-1).length}}}})}),editorTooltips.forEach(function(arguments){insertEditoTooltip.apply(this,arguments)}),cb()}),storage.set("currentLevel",currentLevel),document.getElementById("preview").contentWindow.location.reload()}function showHints(){$("#js_editor").addClass("show-js-hints"),$("#showHints").fadeOut()}function nextLevel(){currentLevel==maxLevel?maxLevel:currentLevel++,loadMiniCourse()}function prevLevel(){1==currentLevel?1:currentLevel--,loadMiniCourse()}for(var maxLevel=gameConstants.MAX_LEVEL,remixUrl=window.location.href.match(/remix=(.+)/),queryParams=window.location.search.substring(1).split("&"),language="",languagePath="",i=0;i<queryParams.length;i++)queryParams[i].indexOf("lang")>-1&&(language=queryParams[i].split("=")[1],languagePath=language+"/");$(document).ready(function(){storage.set("languagePath",languagePath),storage.set("skipToSandbox",!1),remixUrl&&storage.set("skipToSandbox",!0),$("main").css("height",window.innerHeight-36),"code.carnegielearning.com"!=window.location.hostname&&"localhost"!=window.location.hostname||$("#welcomeModal").foundation("reveal","open"),remixUrl||startWalkthrough(),$(document).on("close.fndtn.reveal","#welcomeModal",function(){startWalkthrough()}),$(document).on("click",".joyride-close-tip",function(){console.log(this)});var e=0,n=window.location.search.match(/debugLevel=(\d+)/);n&&(e=parseInt(n[1])),window.sessionStorage.currentLevel=e,currentLevel=e,$instructions=$("#instructions"),$(document).on("click","span.tooltip",function(){Foundation.libs.tooltip.hide($("#editor-tooltip")),$(this).remove(),$("#editor-tooltip").remove()}),$(document).on("click","#signupButton",function(e){e.preventDefault(),console.log("signup"),console.log(this);var n=document.getElementById("sign_up_email").value,o=document.getElementById("sign_up_password").value;createUserAndLogin({email:n,password:o}),$("#signupModal").foundation("reveal","close")}),$(document).on("click","#logout",function(e){e.preventDefault(),console.log("logout"),console.log(this),logout()}),loadMiniCourse(refreshPreview),setTimeout(function(){console.log("REFRESH 2000"),refreshPreview()},2e3),$("iframe#preview").attr("src","mini/index.html").focus(),$("form #00NU0000005PN7j").on("change",function(){console.log($(this).prop("checked")),$(this).prop("checked")?($("#first_name").prop("disabled",!1),$("#email").prop("disabled",!1),$("#phone").prop("disabled",!1)):($("#first_name").val(""),$("#email").val(""),$("#phone").val(""),$("#first_name").prop("disabled",!0),$("#email").prop("disabled",!0),$("#phone").prop("disabled",!0))}),$("#publish-form").submit(function(e){return console.log("VALIDATING"),""==$("#00NU0000005PN7e").val()||""==$("#city").val()||""==$("#country").val()||""==$("#state").val()?(console.log("VALIDATION FAILED"),!1):(console.log("PUBLISHING"),publish(),e.preventDefault(),!1)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
