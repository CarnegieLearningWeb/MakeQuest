(function(root,factory){if(typeof define==="function"&&define.amd)define("p5.play",["p5"],function(p5){factory(p5)});else if(typeof exports==="object")factory(require("../p5"));else factory(root["p5"])})(this,function(p5){p5.prototype.allSprites=new Group;p5.prototype.createSprite=function(x,y,width,height){var s=new Sprite(x,y,width,height);s.depth=allSprites.maxDepth()+1;allSprites.add(s);return s};p5.prototype.removeSprite=function(sprite){sprite.remove()};p5.prototype.updateSprites=function(upd){if(upd==false)spriteUpdate=false;if(upd==true)spriteUpdate=true;if(spriteUpdate)for(var i=0;i<allSprites.size();i++){allSprites.get(i).update()}};p5.prototype.spriteUpdate=true;p5.prototype.getSprites=function(){if(arguments.length===0){return allSprites.toArray()}else{var arr=[];for(var j=0;j<arguments.length;j++){for(var i=0;i<allSprites.size();i++){if(allSprites.get(i).isTagged(arguments[j]))arr.push(allSprites.get(i))}}return arr}};p5.prototype.drawSprites=function(group){if(arguments.length===0){allSprites.sort(function(a,b){return a.depth-b.depth});for(var i=0;i<allSprites.size();i++){allSprites.get(i).display()}}else if(arguments.length===1){if(arguments[0]instanceof Array==false)throw"Error: with drawSprites you can only draw all sprites or a group";else{arguments[0].draw()}}};p5.prototype.drawSprite=function(sprite){if(sprite!=null)sprite.display()};p5.prototype.loadAnimation=function(){return construct(Animation,arguments)};p5.prototype.animation=function(anim,x,y){anim.draw(x,y)};var keyStates={};var mouseStates={};var KEY_IS_UP=0;var KEY_WENT_DOWN=1;var KEY_IS_DOWN=2;var KEY_WENT_UP=3;p5.prototype.keyWentDown=function(key){var keyCode;if(typeof key=="string")keyCode=KEY[key.toUpperCase()];else keyCode=key;if(keyStates[keyCode]==undefined){if(keyIsDown(keyCode))keyStates[keyCode]=KEY_IS_DOWN;else keyStates[keyCode]=KEY_IS_UP}return keyStates[keyCode]==KEY_WENT_DOWN};p5.prototype.keyWentUp=function(key){var keyCode;if(typeof key=="string")keyCode=KEY[key.toUpperCase()];else keyCode=key;if(keyStates[keyCode]===undefined){if(keyIsDown(key))keyStates[keyCode]=KEY_IS_DOWN;else keyStates[keyCode]=KEY_IS_UP}return keyStates[keyCode]==KEY_WENT_UP};p5.prototype.keyDown=function(key){var keyCode;if(typeof key=="string")keyCode=KEY[key.toUpperCase()];else keyCode=key;if(keyStates[keyCode]===undefined){if(keyIsDown(key))keyStates[keyCode]=KEY_IS_DOWN;else keyStates[keyCode]=KEY_IS_UP}return keyStates[keyCode]==KEY_IS_DOWN};p5.prototype.mouseDown=function(buttonCode){if(buttonCode==undefined)buttonCode=LEFT;else buttonCode=buttonCode;if(mouseStates[buttonCode]===undefined){if(mouseIsPressed&&mouseButton==buttonCode)mouseStates[buttonCode]=KEY_IS_DOWN;else mouseStates[buttonCode]=KEY_IS_UP}return mouseStates[buttonCode]==KEY_IS_DOWN};p5.prototype.mouseUp=function(buttonCode){if(buttonCode==undefined)buttonCode=LEFT;else buttonCode=buttonCode;if(mouseStates[buttonCode]===undefined){if(mouseIsPressed&&mouseButton==buttonCode)mouseStates[buttonCode]=KEY_IS_DOWN;else mouseStates[buttonCode]=KEY_IS_UP}return mouseStates[buttonCode]==KEY_IS_UP};p5.prototype.mouseWentUp=function(buttonCode){if(buttonCode==undefined)buttonCode=LEFT;else buttonCode=buttonCode;if(mouseStates[buttonCode]===undefined){if(mouseIsPressed&&mouseButton==buttonCode)mouseStates[buttonCode]=KEY_IS_DOWN;else mouseStates[buttonCode]=KEY_IS_UP}return mouseStates[buttonCode]==KEY_WENT_UP};p5.prototype.mouseWentDown=function(buttonCode){if(buttonCode==undefined)buttonCode=LEFT;else buttonCode=buttonCode;if(mouseStates[buttonCode]===undefined){if(mouseIsPressed&&mouseButton==buttonCode)mouseStates[buttonCode]=KEY_IS_DOWN;else mouseStates[buttonCode]=KEY_IS_UP}return mouseStates[buttonCode]==KEY_WENT_DOWN};p5.prototype.KEY={BACKSPACE:8,TAB:9,ENTER:13,SHIFT:16,CTRL:17,ALT:18,PAUSE:19,CAPS_LOCK:20,ESC:27,PAGE_UP:33,SPACE:33," ":33,PAGE_DOWN:34,END:35,HOME:36,LEFT_ARROW:37,UP_ARROW:38,RIGHT_ARROW:39,DOWN_ARROW:40,INSERT:45,DELETE:46,0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,"0NUMPAD":96,"1NUMPAD":97,"2NUMPAD":98,"3NUMPAD":99,"4NUMPAD":100,"5NUMPAD":101,"6NUMPAD":102,"7NUMPAD":103,"8NUMPAD":104,"9NUMPAD":105,MULTIPLY:106,PLUS:107,MINUT:109,DOT:110,SLASH1:111,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,EQUAL:187,COMA:188,SLASH:191,BACKSLASH:220};p5.prototype.readPresses=function(){for(var key in keyStates){if(keyIsDown(key)){if(keyStates[key]==KEY_IS_UP)keyStates[key]=KEY_WENT_DOWN;else keyStates[key]=KEY_IS_DOWN}else{if(keyStates[key]==KEY_IS_DOWN)keyStates[key]=KEY_WENT_UP;else keyStates[key]=KEY_IS_UP}}for(var btn in mouseStates){if(mouseIsPressed&&mouseButton==btn){if(mouseStates[btn]==KEY_IS_UP)mouseStates[btn]=KEY_WENT_DOWN;else mouseStates[btn]=KEY_IS_DOWN}else{if(mouseStates[btn]==KEY_IS_DOWN)mouseStates[btn]=KEY_WENT_UP;else mouseStates[btn]=KEY_IS_UP}}};p5.prototype.useQuadTree=function(use){if(quadTree!=undefined){if(use==undefined)return quadTree.active;else if(use)quadTree.active=true;else quadTree.active=false}else return false};p5.prototype.quadTree=new Quadtree({x:0,y:0,width:0,height:0},4)});function Sprite(_x,_y,_w,_h){this.position=createVector(_x,_y);this.previousPosition=createVector(_x,_y);this.newPosition=createVector(_x,_y);this.deltaX=0;this.deltaY=0;this.velocity=createVector(0,0);this.maxSpeed=-1;this.friction=1;this.collider;this.colliderType="none";this.touching={};this.touching.left=false;this.touching.right=false;this.touching.top=false;this.touching.bottom=false;this.mass=1;this.immovable=false;this.restitution=1;this.rotation=0;this.rotationSpeed=0;this.rotateToDirection=false;this.depth=0;this.scale=1;var dirX=1;var dirY=1;this.visible=true;this.mouseActive=false;this.mouseIsOver=false;this.mouseIsPressed=false;if(_w==undefined)this.width=100;else this.width=_w;if(_h==undefined)this.height=100;else this.height=_h;this.originalWidth=this.width;this.originalHeight=this.height;this.removed=false;this.life=-1;this.debug=false;this.shapeColor=color(random(255),random(255),random(255));this.groups=new Array;var animations={};var currentAnimation="";this.animation;this.update=function(){if(!this.removed){if(this.newPosition!=this.position)this.previousPosition=createVector(this.newPosition.x,this.newPosition.y);else this.previousPosition=createVector(this.position.x,this.position.y);this.velocity.x*=this.friction;this.velocity.y*=this.friction;if(this.maxSpeed!=-1)this.limitSpeed(this.maxSpeed);if(this.rotateToDirection)this.rotation=this.getDirection();else this.rotation+=this.rotationSpeed;this.position.x+=this.velocity.x;this.position.y+=this.velocity.y;this.newPosition=createVector(this.position.x,this.position.y);this.deltaX=this.position.x-this.previousPosition.x;this.deltaY=this.position.y-this.previousPosition.y;if(animations[currentAnimation]!=null){animations[currentAnimation].update();if(this.colliderType=="default"&&animations[currentAnimation].getWidth()!=1&&animations[currentAnimation].getHeight()!=1){this.collider=this.getBoundingBox();this.colliderType="image";this.width=animations[currentAnimation].getWidth()*abs(this.scale);this.height=animations[currentAnimation].getHeight()*abs(this.scale)}if(animations[currentAnimation].frameChanged||this.width==undefined||this.height==undefined){this.width=animations[currentAnimation].getWidth()*abs(this.scale);this.height=animations[currentAnimation].getHeight()*abs(this.scale)}}if(this.collider!=null){if(this.collider instanceof AABB){var t=radians(this.rotation);if(this.colliderType=="custom"){this.collider.extents.x=this.collider.originalExtents.x*abs(this.scale)*abs(cos(t))+this.collider.originalExtents.y*abs(this.scale)*abs(sin(t));this.collider.extents.y=this.collider.originalExtents.x*abs(this.scale)*abs(sin(t))+this.collider.originalExtents.y*abs(this.scale)*abs(cos(t))}else if(this.colliderType=="default"){this.collider.extents.x=this.originalWidth*abs(this.scale)*abs(cos(t))+this.originalHeight*abs(this.scale)*abs(sin(t));this.collider.extents.y=this.originalWidth*abs(this.scale)*abs(sin(t))+this.originalHeight*abs(this.scale)*abs(cos(t))}else if(this.colliderType=="image"){this.collider.extents.x=this.width*abs(cos(t))+this.height*abs(sin(t));this.collider.extents.y=this.width*abs(sin(t))+this.height*abs(cos(t))}}if(this.collider instanceof CircleCollider){this.collider.radius=this.collider.originalRadius*abs(this.scale)}}if(this.mouseActive){if(this.collider==null)this.setDefaultCollider();this.mouseUpdate()}else{if(typeof this.onMouseOver==="function"||typeof this.onMouseOut==="function"||typeof this.onMousePressed==="function"||typeof this.onMouseReleased==="function"){this.mouseActive=true;if(this.collider==null)this.setDefaultCollider();this.mouseUpdate()}}if(this.life>0)this.life--;if(this.life===0)this.remove()}};this.setDefaultCollider=function(){if(animations[currentAnimation]!=null&&(animations[currentAnimation].getWidth()!=1&&animations[currentAnimation].getHeight()!=1)){this.collider=this.getBoundingBox();this.width=animations[currentAnimation].getWidth()*abs(this.scale);this.height=animations[currentAnimation].getHeight()*abs(this.scale);this.colliderType="image"}else if(animations[currentAnimation]!=null&&animations[currentAnimation].getWidth()==1&&animations[currentAnimation].getHeight()==1){}else{this.collider=new AABB(this.position,createVector(this.width,this.height));this.colliderType="default"}quadTree.insert(this)};this.mouseUpdate=function(){var mouseWasOver=this.mouseIsOver;var mouseWasPressed=this.mouseIsPressed;this.mouseIsOver=false;this.mouseIsPressed=false;var mousePosition;if(camera.active)mousePosition=createVector(camera.mouseX,camera.mouseY);else mousePosition=createVector(mouseX,mouseY);if(this.collider!=null){if(this.collider instanceof CircleCollider){if(dist(mousePosition.x,mousePosition.y,this.collider.center.x,this.collider.center.y)<this.collider.radius)this.mouseIsOver=true}else if(this.collider instanceof AABB){if(mousePosition.x>this.collider.left()&&mousePosition.y>this.collider.top()&&mousePosition.x<this.collider.right()&&mousePosition.y<this.collider.bottom()){this.mouseIsOver=true}}if(this.mouseIsOver&&mouseIsPressed)this.mouseIsPressed=true;if(!mouseWasOver&&this.mouseIsOver&&this.onMouseOver!=undefined)if(typeof this.onMouseOver==="function")this.onMouseOver.call(this,this);else print("Warning: onMouseOver should be a function");if(mouseWasOver&&!this.mouseIsOver&&this.onMouseOut!=undefined)if(typeof this.onMouseOut==="function")this.onMouseOut.call(this,this);else print("Warning: onMouseOut should be a function");if(!mouseWasPressed&&this.mouseIsPressed&&this.onMousePressed!=undefined)if(typeof this.onMousePressed==="function")this.onMousePressed.call(this,this);else print("Warning: onMousePressed should be a function");if(mouseWasPressed&&!this.mouseIsPressed&&this.onMouseReleased!=undefined)if(typeof this.onMouseReleased==="function")this.onMouseReleased.call(this,this);else print("Warning: onMouseReleased should be a function")}};this.setCollider=function(type,offsetX,offsetY,width,height){this.colliderType="custom";if(type=="rectangle"&&arguments.length==5)this.collider=new AABB(this.position,createVector(arguments[3],arguments[4]),createVector(arguments[1],arguments[2]));else if(type=="circle"){var v=createVector(arguments[1],arguments[2]);if(arguments.length!=4)print('Warning: usage setCollider("circle", offsetX, offsetY, radius)');this.collider=new CircleCollider(this.position,arguments[3],createVector(arguments[1],arguments[2]))}quadTree.insert(this)};this.getBoundingBox=function(){var w=animations[currentAnimation].getWidth()*abs(this.scale);var h=animations[currentAnimation].getHeight()*abs(this.scale);if(w===1&&h===1){return new AABB(this.position,createVector(w,h))}else{return new AABB(this.position,createVector(w,h))}};this.mirrorX=function(dir){if(dir==1||dir==-1)dirX=dir;else return dirX};this.mirrorY=function(dir){if(dir==1||dir==-1)dirY=dir;else return dirY};this.display=function(){if(this.visible&&!this.removed){push();colorMode(RGB);noStroke();rectMode(CENTER);ellipseMode(CENTER);imageMode(CENTER);translate(this.position.x,this.position.y);scale(this.scale*dirX,this.scale*dirY);rotate(radians(this.rotation));this.draw();pop();if(this.debug){stroke(0,255,0);line(this.position.x-10,this.position.y,this.position.x+10,this.position.y);line(this.position.x,this.position.y-10,this.position.x,this.position.y+10);noFill();noStroke();fill(0,255,0);textAlign(LEFT,BOTTOM);textSize(16);text(this.depth+"",this.position.x+4,this.position.y-2);noFill();stroke(0,255,0);if(this.collider!=undefined){this.collider.draw()}}}};this.draw=function(){if(currentAnimation!=""&&animations!=null){if(animations[currentAnimation]!=null)animations[currentAnimation].draw(0,0,0)}else{noStroke();fill(this.shapeColor);rect(0,0,this.width,this.height)}};this.remove=function(){this.removed=true;quadTree.removeObject(this);for(var i=0;i<this.groups.length;i++){this.groups[i].remove(this)}};this.setVelocity=function(x,y){this.velocity.x=x;this.velocity.y=y};this.getSpeed=function(){return this.velocity.mag()};this.getDirection=function(){var direction=atan2(this.velocity.y,this.velocity.x);if(isNaN(direction))direction=0;return degrees(direction)};this.addToGroup=function(group){if(group instanceof Array)group.add(this);else print("addToGroup error: "+group+" is not a group")};this.limitSpeed=function(max){var speed=this.getSpeed();if(abs(speed)>max){var k=max/abs(speed);this.velocity.x*=k;this.velocity.y*=k}};this.setSpeed=function(speed,angle){var a=radians(angle);this.velocity.x=cos(a)*speed;this.velocity.y=sin(a)*speed};this.addSpeed=function(speed,angle){var a=radians(angle);this.velocity.x+=cos(a)*speed;this.velocity.y+=sin(a)*speed};this.attractionPoint=function(magnitude,pointX,pointY){var angle=atan2(pointY-this.position.y,pointX-this.position.x);this.velocity.x+=cos(angle)*magnitude;this.velocity.y+=sin(angle)*magnitude};this.addImage=function(){if(typeof arguments[0]=="string"&&arguments[1]instanceof p5.Image)this.addAnimation(arguments[0],arguments[1]);else if(arguments[0]instanceof p5.Image)this.addAnimation("normal",arguments[0]);else throw"addImage error: allowed usages are <image> or <label>, <image>"};this.addAnimation=function(label,animation){var anim;if(typeof label!="string"){print("Sprite.addAnimation error: the first argument must be a label (String)");return-1}else if(arguments.length<2){print("addAnimation error: you must specify a label and n frame images");return-1}else if(arguments[1]instanceof Animation){var sourceAnimation=arguments[1];var newAnimation=sourceAnimation.clone();animations[label]=newAnimation;if(currentAnimation==""){currentAnimation=label;this.animation=newAnimation}newAnimation.isSpriteAnimation=true;return newAnimation}else{var animFrames=[];for(var i=1;i<arguments.length;i++)animFrames.push(arguments[i]);anim=construct(Animation,animFrames);animations[label]=anim;if(currentAnimation==""){currentAnimation=label;this.animation=anim}anim.isSpriteAnimation=true;return anim}};this.changeImage=function(label){this.changeAnimation(label)};this.getAnimationLabel=function(){return currentAnimation};this.changeAnimation=function(label){if(animations[label]==null)print("changeAnimation error: no animation labeled "+label);else{currentAnimation=label;this.animation=animations[label]}};this.overlapPixel=function(pointX,pointY){var point=createVector(arguments[0],arguments[1]);var img=this.animation.getFrameImage();point.x-=this.position.x-img.width/2;point.y-=this.position.y-img.height/2;if(point.x<0||point.x>img.width||point.y<0||point.y>img.height)return false;else if(this.rotation==0&&this.scale==1){var values=img.get(point.x,point.y);return values[3]==255}else{print("Error: overlapPixel doesn't work with scaled or rotated sprites yet");return false}};this.overlapPoint=function(pointX,pointY){var point=createVector(arguments[0],arguments[1]);if(this.collider==null)this.setDefaultCollider();if(this.collider!=undefined){if(this.collider instanceof AABB)return point.x>this.collider.left()&&point.x<this.collider.right()&&point.y>this.collider.top()&&point.y<this.collider.bottom();if(this.collider instanceof CircleCollider){var sqRadius=this.collider.radius*this.collider.radius;var sqDist=pow(this.collider.center.x-point.x,2)+pow(this.collider.center.y-point.y,2);return sqDist<sqRadius}else return false}else return false};this.overlap=function(target,callback){return this.AABBops("overlap",target,callback)};this.collide=function(target,callback){return this.AABBops("collide",target,callback)};this.displace=function(target,callback){return this.AABBops("displace",target,callback)};this.bounce=function(target,callback){return this.AABBops("bounce",target,callback)};this.AABBops=function(type,target,callback){this.touching.left=false;this.touching.right=false;this.touching.top=false;this.touching.bottom=false;var result=false;var others=[];if(target instanceof Sprite)others.push(target);else if(target instanceof Array){if(quadTree!=undefined&&quadTree.active)others=quadTree.retrieveFromGroup(this,target);if(others.length==0)others=target}else throw"Error: overlap can only be checked between sprites or groups";for(var i=0;i<others.length;i++)if(this!=others[i]&&!this.removed){var other=others[i];if(this.collider==undefined)this.setDefaultCollider();if(other.collider==undefined)other.setDefaultCollider();if(this.collider!=undefined&&other.collider!=undefined){if(type=="overlap"){var over;if(this.collider instanceof CircleCollider)over=other.collider.overlap(this.collider);else over=this.collider.overlap(other.collider);if(over){result=true;if(callback!=undefined&&typeof callback=="function")callback.call(this,this,other)}}else if(type=="collide"||type=="bounce"){var displacement=createVector(0,0);var tunnelX=abs(this.velocity.x-other.velocity.x)>=other.collider.extents.x/2&&round(this.deltaX-this.velocity.x)==0;var tunnelY=abs(this.velocity.y-other.velocity.y)>=other.collider.size().y/2&&round(this.deltaY-this.velocity.y)==0;if(tunnelX||tunnelY){var c=createVector((this.position.x+this.previousPosition.x)/2,(this.position.y+this.previousPosition.y)/2);var e=createVector(abs(this.position.x-this.previousPosition.x)+this.collider.extents.x,abs(this.position.y-this.previousPosition.y)+this.collider.extents.y);var bbox=new AABB(c,e,this.collider.offset);if(bbox.overlap(other.collider)){if(tunnelX){if(this.velocity.x<0)displacement.x=other.collider.right()-this.collider.left()+1;else if(this.velocity.x>0)displacement.x=other.collider.left()-this.collider.right()-1}if(tunnelY){if(this.velocity.y>0)displacement.y=other.collider.top()-this.collider.bottom()-1;else if(this.velocity.y<0)displacement.y=other.collider.bottom()-this.collider.top()+1}}}else{if(this.collider instanceof CircleCollider){displacement=other.collider.collide(this.collider).mult(-1)}else displacement=this.collider.collide(other.collider)}if(displacement.x==0&&displacement.y==0)result=false;else{if(!this.immovable){this.position.add(displacement);this.previousPosition=createVector(this.position.x,this.position.y);this.newPosition=createVector(this.position.x,this.position.y)}if(displacement.x>0)this.touching.left=true;if(displacement.x<0)this.touching.right=true;if(displacement.y<0)this.touching.bottom=true;if(displacement.y>0)this.touching.top=true;if(type=="bounce"){if(other.immovable){var newVelX1=-this.velocity.x+other.velocity.x;var newVelY1=-this.velocity.y+other.velocity.y}else{var newVelX1=(this.velocity.x*(this.mass-other.mass)+2*other.mass*other.velocity.x)/(this.mass+other.mass);var newVelY1=(this.velocity.y*(this.mass-other.mass)+2*other.mass*other.velocity.y)/(this.mass+other.mass);var newVelX2=(other.velocity.x*(other.mass-this.mass)+2*this.mass*this.velocity.x)/(this.mass+other.mass);var newVelY2=(other.velocity.y*(other.mass-this.mass)+2*this.mass*this.velocity.y)/(this.mass+other.mass)}if(abs(displacement.x)>abs(displacement.y)){if(!this.immovable){this.velocity.x=newVelX1*this.restitution}if(!other.immovable)other.velocity.x=newVelX2*other.restitution}if(abs(displacement.x)<abs(displacement.y)){if(!this.immovable)this.velocity.y=newVelY1*this.restitution;if(!other.immovable)other.velocity.y=newVelY2*other.restitution}}if(callback!=undefined&&typeof callback=="function")callback.call(this,this,other);result=true}}else if(type=="displace"){if(this.collider instanceof CircleCollider)displacement=other.collider.collide(this.collider).mult(-1);else displacement=this.collider.collide(other.collider);if(displacement.x==0&&displacement.y==0)result=false;else{other.position.sub(displacement);if(displacement.x>0)this.touching.left=true;if(displacement.x<0)this.touching.right=true;if(displacement.y<0)this.touching.bottom=true;if(displacement.y>0)this.touching.top=true;if(callback!=undefined&&typeof callback=="function")callback.call(this,this,other);result=true}}}}return result}}p5.prototype.camera=new Camera(0,0,1);p5.prototype.camera.init=false;function Camera(x,y,zoom){this.position=p5.prototype.createVector(x,y);this.zoom=zoom;this.mouseX=p5.prototype.mouseX;this.mouseY=p5.prototype.mouseY;this.active=false;this.on=function(){if(!this.active){cameraPush();this.active=true}};this.off=function(){if(this.active){cameraPop();this.active=false}}}function cameraPush(){if(!camera.init&&camera.position.x==0&&camera.position.y==0){camera.position.x=width/2;camera.position.y=height/2;camera.init=true}camera.mouseX=mouseX+camera.position.x-width/2;camera.mouseY=mouseY+camera.position.y-height/2;if(!camera.active){camera.active=true;push();scale(camera.zoom);translate(-camera.position.x+width/2/camera.zoom,-camera.position.y+height/2/camera.zoom)}}function cameraPop(){if(camera.active){pop();camera.active=false}}function Group(){var array=[];array.get=function(i){return array[i]};array.contains=function(sprite){return this.indexOf(sprite)>-1};array.indexOf=function(item){for(var i=0,len=array.length;i<len;++i){if(virtEquals(item,array[i])){return i}}return-1};array.add=function(s){if(s instanceof Sprite==false)throw"Error: you can only add sprites to a group";else{array.push(s);s.groups.push(this)}};array.size=function(){return array.length};array.removeSprites=function(){for(var i=0;i<array.length;i++)array[i].remove();array.length=0};array.clear=function(){array.length=0};array.remove=function(item){if(item instanceof Sprite==false)throw"Error: you can only remove sprites from a group";item=this.indexOf(item);if(item>-1){array.splice(item,1);return true}return false};array.toArray=function(){return array.slice(0)};array.maxDepth=function(){var max;if(array.length==0)max=0;else max=array[0].depth;for(var i=0;i<array.length;i++)if(array[i].depth>max)max=array[i].depth;return max};array.minDepth=function(){var min;if(array.length==0)min=99999;else min=array[0].depth;for(var i=0;i<array.length;i++)if(array[i].depth<min)min=array[i].depth;return min};array.draw=function(){this.sort(function(a,b){return a.depth-b.depth});for(var i=0;i<this.size();i++){this.get(i).display()}};function virtEquals(obj,other){if(obj===null||other===null){return obj===null&&other===null}if(typeof obj==="string"){return obj===other}if(typeof obj!=="object"){return obj===other}if(obj.equals instanceof Function){return obj.equals(other)}return obj===other}array.overlap=function(target,callback){for(var i=0;i<this.size();i++)this.get(i).AABBops("overlap",target,callback)};array.collide=function(target,callback){for(var i=0;i<this.size();i++)this.get(i).AABBops("collide",target,callback)};array.displace=function(target,callback){for(var i=0;i<this.size();i++)this.get(i).AABBops("displace",target,callback)};array.bounce=function(target,callback){for(var i=0;i<this.size();i++)this.get(i).AABBops("bounce",target,callback)};return array}function CircleCollider(_center,_radius,_offset){this.center=_center;this.radius=_radius;this.originalRadius=_radius;if(_offset==undefined)this.offset=createVector(0,0);else this.offset=_offset;this.extents=createVector(_radius*2,_radius*2);this.draw=function(col){noFill();stroke(0,255,0);rectMode(CENTER);ellipse(this.center.x+this.offset.x,this.center.y+this.offset.y,this.radius*2,this.radius*2)};this.overlap=function(other){var r=this.radius+other.radius;r*=r;var sqDist=pow(this.center.x-other.center.x,2)+pow(this.center.y-other.center.y,2);return r>sqDist};this.collide=function(other){if(this.overlap(other)){var a=atan2(this.center.y-other.center.y,this.center.x-other.center.x);var radii=this.radius+other.radius;var intersection=abs(radii-dist(this.center.x,this.center.y,other.center.x,other.center.y));var displacement=createVector(cos(a)*intersection,sin(a)*intersection);return displacement}else return createVector(0,0)};this.size=function(){return createVector(this.radius*2,this.radius*2)};this.left=function(){return this.center.x+this.offset.x-this.radius};this.right=function(){return this.center.x+this.offset.x+this.radius};this.top=function(){return this.center.y+this.offset.y-this.radius};this.bottom=function(){return this.center.y+this.offset.y+this.radius}}function AABB(_center,_extents,_offset){this.center=_center;this.extents=_extents;this.originalExtents=_extents.copy();if(_offset==undefined)this.offset=createVector(0,0);else this.offset=_offset;this.min=function(){return createVector(this.center.x+this.offset.x-this.extents.x,this.center.y+this.offset.y-this.extents.y)};this.max=function(){return createVector(this.center.x+this.offset.x+this.extents.x,this.center.y+this.offset.y+this.extents.y)};this.right=function(){return this.center.x+this.offset.x+this.extents.x/2};this.left=function(){return this.center.x+this.offset.x-this.extents.x/2};this.top=function(){return this.center.y+this.offset.y-this.extents.y/2};this.bottom=function(){return this.center.y+this.offset.y+this.extents.y/2};this.size=function(){return createVector(this.extents.x*2,this.extents.y*2)};this.rotate=function(r){var t=radians(r);var w2=this.extents.x*abs(cos(t))+this.extents.y*abs(sin(t));var h2=this.extents.x*abs(sin(t))+this.extents.y*abs(cos(t));this.extents.x=w2;this.extents.y=h2};this.draw=function(col){noFill();stroke(0,255,0);rectMode(CENTER);rect(this.center.x+this.offset.x,this.center.y+this.offset.y,this.size().x/2,this.size().y/2)};this.overlap=function(other){if(other instanceof AABB){var md=other.minkowskiDifference(this);if(md.min().x<=0&&md.max().x>=0&&md.min().y<=0&&md.max().y>=0){return true}else return false}else if(other instanceof CircleCollider){var pt=createVector(other.center.x,other.center.y);if(other.center.x<this.left())pt.x=this.left();else if(other.center.x>this.right())pt.x=this.right();if(other.center.y<this.top())pt.y=this.top();else if(other.center.y>this.bottom())pt.y=this.bottom();var distance=pt.dist(other.center);return distance<other.radius}};this.collide=function(other){if(other instanceof AABB){var md=other.minkowskiDifference(this);if(md.min().x<=0&&md.max().x>=0&&md.min().y<=0&&md.max().y>=0){var boundsPoint=md.closestPointOnBoundsToPoint(createVector(0,0));return boundsPoint}else return createVector(0,0)}else if(other instanceof CircleCollider){var pt=createVector(other.center.x,other.center.y);if(other.center.x<this.left())pt.x=this.left();else if(other.center.x>this.right())pt.x=this.right();if(other.center.y<this.top())pt.y=this.top();else if(other.center.y>this.bottom())pt.y=this.bottom();var distance=pt.dist(other.center);var a;if(distance<other.radius){if(pt.x===other.center.x&&pt.y===other.center.y){var xOverlap=pt.x-this.center.x;var yOverlap=pt.y-this.center.y;if(abs(xOverlap)<abs(yOverlap)){if(xOverlap>0)pt.x=this.right();else pt.x=this.left()}else{if(yOverlap<0)pt.y=this.top();else pt.y=this.bottom()}a=atan2(other.center.y-pt.y,other.center.x-pt.x);if(a==0){if(pt.x==this.right())a=PI;if(pt.y==this.top())a=PI/2;if(pt.y==this.bottom())a=-PI/2}}else{a=atan2(pt.y-other.center.y,pt.x-other.center.x)}var d=createVector(pt.x-other.center.x,pt.y-other.center.y);var displacement=createVector(cos(a)*other.radius-d.x,sin(a)*other.radius-d.y);return displacement}else return createVector(0,0)}};this.minkowskiDifference=function(other){var topLeft=this.min().sub(other.max());var fullSize=this.size().add(other.size());return new AABB(topLeft.add(fullSize.div(2)),fullSize.div(2))};this.closestPointOnBoundsToPoint=function(point){var minDist=abs(point.x-this.min().x);var boundsPoint=createVector(this.min().x,point.y);if(abs(this.max().x-point.x)<minDist){minDist=abs(this.max().x-point.x);boundsPoint=createVector(this.max().x,point.y)}if(abs(this.max().y-point.y)<minDist){minDist=abs(this.max().y-point.y);boundsPoint=createVector(point.x,this.max().y)}if(abs(this.min().y-point.y)<minDist){minDist=abs(this.min.y-point.y);boundsPoint=createVector(point.x,this.min().y)}return boundsPoint}}function Animation(){this.images=[];var frame=0;var cycles=0;var targetFrame=-1;this.offX=0;this.offY=0;this.frameDelay=4;this.playing=true;this.visible=true;this.looping=true;this.frameChanged=false;this.imageCollider=false;if(arguments.length==2&&typeof arguments[0]=="string"&&typeof arguments[1]=="string"){var from=arguments[0];var to=arguments[1];var ext1=from.substring(from.length-4,from.length);if(ext1!=".png"){println("Animation error: you need to use .png files (filename "+from+")");from=-1}var ext2=to.substring(to.length-4,to.length);if(ext2!=".png"){println("Animation error: you need to use .png files (filename "+to+")");to=-1}if(from!=-1&&to!=-1){var digits1=0;var digits2=0;for(var i=from.length-5;i>=0;i--){if(from.charAt(i)>="0"&&from.charAt(i)<="9")digits1++}for(var i=to.length-5;i>=0;i--){if(to.charAt(i)>="0"&&to.charAt(i)<="9")digits2++}var prefix1=from.substring(0,from.length-(4+digits1));var prefix2=to.substring(0,to.length-(4+digits2));var number1=parseInt(from.substring(from.length-(4+digits1),from.length-4));var number2=parseInt(to.substring(to.length-(4+digits2),to.length-4));if(number2<number1){var t=number2;number2=number1;number1=t}if(prefix1!=prefix2){this.images.push(loadImage(from));this.images.push(loadImage(to))}else{if(digits1==digits2){for(var i=number1;i<=number2;i++){var fileName=prefix1+nf(i,digits1)+".png";this.images.push(loadImage(fileName))}}else{for(var i=number1;i<=number2;i++){var fileName=prefix1+i+".png";this.images.push(loadImage(fileName))}}}}}else if(arguments.length!=0){for(var i=0;i<arguments.length;i++){if(arguments[i]instanceof p5.Image)this.images.push(arguments[i]);else this.images.push(loadImage(arguments[i]))}}this.clone=function(){var myClone=new Animation;myClone.images=[];for(var i=0;i<this.images.length;i++)myClone.images.push(this.images[i]);myClone.offX=this.offX;myClone.offY=this.offY;myClone.frameDelay=this.frameDelay;myClone.playing=this.playing;myClone.looping=this.looping;return myClone};this.draw=function(x,y){this.xpos=arguments[0];this.ypos=arguments[1];if(arguments[2]!=undefined)this.rotation=arguments[2];else this.rotation=0;if(this.visible){if(this.isSpriteAnimation==null)this.update();push();imageMode(CENTER);translate(this.xpos,this.ypos);rotate(radians(this.rotation));if(this.images[frame]!==undefined){image(this.images[frame],this.offX,this.offY)}else{print("Warning undefined frame "+frame)}pop()}};this.update=function(){cycles++;var previousFrame=frame;this.frameChanged=false;if(this.images.length==1){this.playing=false;frame=0}if(this.playing&&cycles%this.frameDelay===0){if(targetFrame>frame&&targetFrame!==-1){frame++}else if(targetFrame<frame&&targetFrame!==-1){frame--}else if(targetFrame==frame&&targetFrame!==-1){this.playing=false}else if(this.looping){if(frame>=this.images.length-1)frame=0;else frame++}else{if(frame<this.images.length-1)frame++}}if(previousFrame!=frame)this.frameChanged=true};this.play=function(){this.playing=true;targetFrame=-1};this.stop=function(){this.playing=false};this.rewind=function(){frame=0};this.changeFrame=function(f){if(f<this.images.length)frame=f;else frame=this.images.length-1;
targetFrame=-1};this.nextFrame=function(){if(frame<this.images.length-1)frame=frame+1;else if(this.looping)frame=0;targetFrame=-1;this.playing=false};this.previousFrame=function(){if(frame>0)frame=frame-1;else if(this.looping)frame=this.images.length-1;targetFrame=-1;this.playing=false};this.goToFrame=function(f){this.f=f;if(this.f>=0&&this.f<this.images.length)targetFrame=this.f;if(targetFrame!=frame)this.playing=true};this.getFrame=function(){return frame};this.getLastFrame=function(){return this.images.length-1};this.getFrameImage=function(){return this.images[frame]};this.getImageAt=function(f){return this.images[f]};this.getWidth=function(){return this.images[frame].width};this.getHeight=function(){return this.images[frame].height}}function construct(constructor,args){function F(){return constructor.apply(this,args)}F.prototype=constructor.prototype;return new F}function Quadtree(bounds,max_objects,max_levels,level){this.active=true;this.max_objects=max_objects||10;this.max_levels=max_levels||4;this.level=level||0;this.bounds=bounds;this.objects=[];this.object_refs=[];this.nodes=[]}Quadtree.prototype.updateBounds=function(){var objects=this.getAll();var x=1e4;var y=1e4;var w=-1e4;var h=-1e4;for(var i=0;i<objects.length;i++){if(objects[i].position.x<x)x=objects[i].position.x;if(objects[i].position.y<y)y=objects[i].position.y;if(objects[i].position.x>w)w=objects[i].position.x;if(objects[i].position.y>h)h=objects[i].position.y}this.bounds={x:x,y:y,width:w,height:h}};Quadtree.prototype.split=function(){var nextLevel=this.level+1,subWidth=Math.round(this.bounds.width/2),subHeight=Math.round(this.bounds.height/2),x=Math.round(this.bounds.x),y=Math.round(this.bounds.y);this.nodes[0]=new Quadtree({x:x+subWidth,y:y,width:subWidth,height:subHeight},this.max_objects,this.max_levels,nextLevel);this.nodes[1]=new Quadtree({x:x,y:y,width:subWidth,height:subHeight},this.max_objects,this.max_levels,nextLevel);this.nodes[2]=new Quadtree({x:x,y:y+subHeight,width:subWidth,height:subHeight},this.max_objects,this.max_levels,nextLevel);this.nodes[3]=new Quadtree({x:x+subWidth,y:y+subHeight,width:subWidth,height:subHeight},this.max_objects,this.max_levels,nextLevel)};Quadtree.prototype.getIndex=function(pRect){if(pRect.collider==null)return-1;else{var index=-1,verticalMidpoint=this.bounds.x+this.bounds.width/2,horizontalMidpoint=this.bounds.y+this.bounds.height/2,topQuadrant=pRect.collider.top()<horizontalMidpoint&&pRect.collider.top()+pRect.collider.size().y<horizontalMidpoint,bottomQuadrant=pRect.collider.top()>horizontalMidpoint;if(pRect.collider.left()<verticalMidpoint&&pRect.collider.left()+pRect.collider.size().x<verticalMidpoint){if(topQuadrant){index=1}else if(bottomQuadrant){index=2}}else if(pRect.collider.left()>verticalMidpoint){if(topQuadrant){index=0}else if(bottomQuadrant){index=3}}return index}};Quadtree.prototype.insert=function(obj){if(this.objects.indexOf(obj)==-1){var i=0,index;if(typeof this.nodes[0]!=="undefined"){index=this.getIndex(obj);if(index!==-1){this.nodes[index].insert(obj);return}}this.objects.push(obj);if(this.objects.length>this.max_objects&&this.level<this.max_levels){if(typeof this.nodes[0]==="undefined"){this.split()}while(i<this.objects.length){index=this.getIndex(this.objects[i]);if(index!==-1){this.nodes[index].insert(this.objects.splice(i,1)[0])}else{i=i+1}}}}};Quadtree.prototype.retrieve=function(pRect){var index=this.getIndex(pRect),returnObjects=this.objects;if(typeof this.nodes[0]!=="undefined"){if(index!==-1){returnObjects=returnObjects.concat(this.nodes[index].retrieve(pRect))}else{for(var i=0;i<this.nodes.length;i=i+1){returnObjects=returnObjects.concat(this.nodes[i].retrieve(pRect))}}}return returnObjects};Quadtree.prototype.retrieveFromGroup=function(pRect,group){var results=[];var candidates=this.retrieve(pRect);for(var i=0;i<candidates.length;i++)if(group.contains(candidates[i]))results.push(candidates[i]);return results};Quadtree.prototype.getAll=function(){var objects=this.objects;for(var i=0;i<this.nodes.length;i=i+1){objects=objects.concat(this.nodes[i].getAll())}return objects};Quadtree.prototype.getObjectNode=function(obj){var index;if(!this.nodes.length){return this}else{index=this.getIndex(obj);if(index===-1){return this}else{var node=this.nodes[index].getObjectNode(obj);if(node)return node}}return false};Quadtree.prototype.removeObject=function(obj){var node=this.getObjectNode(obj),index=node.objects.indexOf(obj);if(index===-1)return false;node.objects.splice(index,1)};Quadtree.prototype.clear=function(){this.objects=[];if(!this.nodes.length)return;for(var i=0;i<this.nodes.length;i=i+1){this.nodes[i].clear()}this.nodes=[]};Quadtree.prototype.cleanup=function(){var objects=this.getAll();this.clear();for(var i=0;i<objects.length;i++){this.insert(objects[i])}};function updateTree(){if(quadTree.active){quadTree.updateBounds();quadTree.cleanup()}}p5.prototype.registerMethod("pre",p5.prototype.readPresses);p5.prototype.registerMethod("pre",p5.prototype.updateSprites);p5.prototype.registerMethod("post",updateTree);p5.prototype.registerMethod("pre",cameraPush);p5.prototype.registerMethod("post",cameraPop);